services:
  gateway:
    command: sh -c "adev runserver ."
    build:
      target: dev
    ports:
      - '${GATEWAY_PORT}:${GATEWAY_PORT}'
    volumes:
      - ../gateway/:/gateway

  profiler:
    command: sh -c "pgrate -p ${MIGRATIONS_FOLDER} -d ${PROFILER_DB_URI} && jurigged -v main.py"
    build:
      target: dev
    environment:
      PROFILER_PORT: ${PROFILER_PORT}
    ports:
      - '${PROFILER_PORT}:${PROFILER_PORT}'
    volumes:
      - ../profiler:/profiler

  ttt_online:
   command: sh -c "pgrate -p ${MIGRATIONS_FOLDER} -d ${DB_URI} && adev runserver ."
   build:
     target: dev
     dockerfile: ops/ttt-online/Dockerfile
   environment:
     ENV: ${ENV}
     SECRET: ${SECRET}
     DB_URI: ${DB_URI}
   ports:
     - '${TTT_ONLINE_PORT}:8000'
   volumes:
     - ../ttt-online/:/server

  db:
    environment:
      POSTGRES_USER: ${APP_DB_USERNAME}
      POSTGRES_PASSWORD: ${APP_DB_PASSWORD}
      POSTGRES_MULTIPLE_DATABASES: ${APP_DB_DATABASE},${PROFILER_DB_DATABASE}
    volumes:
      - db:/var/lib/postgresql/data
      - ./pg-init-scripts:/docker-entrypoint-initdb.d
    ports:
      - '5432:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $APP_DB_USERNAME" ]

volumes:
  db:
